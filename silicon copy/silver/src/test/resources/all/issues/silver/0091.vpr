// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

method test09(B: Multiset[Int], x: Int, xc: Int, y: Int, yc: Int)
  requires (x in B) == xc
  requires (y in B) == yc
{
  var B1: Multiset[Int] := B union Multiset(x, y, x)

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert (y in B1) == yc + 1 && (x in B1) == xc + 2
}

method test09_fixed(B: Multiset[Int], x: Int, xc: Int, y: Int, yc: Int)
  requires x != y
  requires (x in B) == xc
  requires (y in B) == yc
{
  var B1: Multiset[Int] := B union Multiset(x, y, x)

  assert (y in B1) == yc + 1 && (x in B1) == xc + 2
}

method test10(B: Multiset[Int], x: Int, xc: Int, y: Int, yc: Int)
  requires (x in B) == xc
  requires (y in B) == yc
  requires xc > 10 && yc > 10
{
  var B1: Multiset[Int] := B setminus Multiset(x, y, y)

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert (y in B1) == yc - 2 && (x in B1) == xc - 1
}

method test10_fixed(B: Multiset[Int], x: Int, xc: Int, y: Int, yc: Int)
  requires x != y
  requires (x in B) == xc
  requires (y in B) == yc
  requires xc > 10 && yc > 10
{
  var B1: Multiset[Int] := B setminus Multiset(x, y, y)

  assert (y in B1) == yc - 2 && (x in B1) == xc - 1
}
