domain Functions {
  function __learn_trigger__(b: Bool): Bool
  function exists_path(start:Ref, end:Ref): Bool
  function foo(start:Ref, end:Ref): Bool
}

method link_DAG_next(from:Ref)
  ensures (from != null) ==> (forall x:Ref, y:Ref :: { exists_path(x,y) } __learn_trigger__( foo(from,y)))

method append(from:Ref)
{
    var y : Ref
    assume from != null
    link_DAG_next(from)
    assert exists_path(y,y) ==> __learn_trigger__(foo(from,y)) // should pass
    //:: ExpectedOutput(assert.failed:assertion.false)
    assert exists_path(y,y) ==> __learn_trigger__(foo(y,y)) // should fail
}

