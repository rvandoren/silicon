field value: Int
field next: Ref
field f: Int

function itemat(node: Ref, i: Int): Int
    requires acc(valid(node), wildcard) && i >= 0
{
    unfolding acc(valid(node), wildcard) in ((i == 0 || node.next == null) ? node.value : itemat(node.next, i-1))
}

predicate valid(this: Ref) {
    acc(this.next, write) &&
    acc(this.value, write) &&
    ((this.next != null) ==> acc(valid(this.next), write))
}
